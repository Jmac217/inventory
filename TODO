"Add and View have different hierarchies to them; add must display all available properties to be given to the entry, but display them as needed and use auto-incrementation for select duplicate fields set by the admin. View on the other hand is meant to show the basic information and present the extra information when it's necessary ie model field has more than one model, but the value of printer_amount is hidden until focused."

::TODO::

	mysql will need to be looked at for search and database creation, other database types should be based on the mysql structure.
	Implement permissions: Admin=>add,view,change,destroy; Manager=>Add,View,Request; Employee=>View.

[View]

	Revise siblings functions, when finished, into parametric functions; taking possibly only a row_id and class.
	Values are still sticky when selecting Add, to change this, divs only need to be declared hidden.
	The update fields need resized.
	The footer is still misaligned.
	Does it matter that dates are not selectors here?
	Footers can more-than-likely be combined, however they will remain separated for now
	An edited field becomes 'visible', and with how CSS works a child, that is given its own visibility, cannot be changed by the parent, or so it would seem

[Add]

	Field position relativity is going to be a problem soon: those dimensions are mostly correct at so just figure their pixel density.
	'maintenance_date' will need to be turned into a date selector eventually. This will affect: add.php -> add.js -> uploadXML.php
	date selectors should be made into class based functions
	There seems to be a new problem with the dates being added. This probably has something to do with the change in scope. I just realized it hadn't been tested since it was changed.
	`Amount` Fields need to have 'feedback', be set at 0, and use the same functionality as the `field_number` selection for up and down arrow key increments and decrements.

[General CSS]
	
	Relativity will need to go very soon. (Should there be a separate sheet for relativity? - Would that even work in smaller resolutions than 16x9)
	All of those hover things that do the same thing should be condensed into a single class obviously.
	Seems like headers and footers could be separated into add and view classes too, but that will need more consideration. That will surely involve functions and things, which I'm still a ways off from revising.
	Swapping quickly between views, view->add, will load view.php into add despite visibility of view. Things are just a little janky with these views.

[Bugs]

	A few things to note going in

		update fields are out of whack, those will be aligned with the columns...
		omitted fields in databases are untrackable. The default being used is 2 - set in php/getRows.php. I'm almost certain it doesn't matter if the bool field is longer than the number of values.
		selecting a dropdown field does not remove current view field. Maybe as simple as adding a css hidden.
		search needs to be disabled for now. It throws things off and is outdated.
		assets are still in need of an update.
		"omittedFields" will be a global variable - so right now it can stay hard-coded at a value of 2.
		"headerSetter.php" is still being used to reset tabs on category selection, but the javascript version still exists in its broken state - it's just commented out. This will be used to replace the PHP eventually.
		
	Aesthetics

		try and rework the width of the body at some point.
		figure out if the line between view and the footer is going or staying.
		Set up outline for the settings panel and figure out its location.
		make non-labeled fields clickable.
		get a jquery scrollbar in here.
		make drop-down scrollable for lengthy applications.
